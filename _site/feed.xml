<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title></title>
		<description>Teknolojik bilgiler içeren kişisel web sayfası.</description>		
		<link>http://omereryilmaz.com</link>
		<atom:link href="http://omereryilmaz.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>SOLID Prensipleri</title>
				<description>&lt;p&gt;SOLID prensipleri, yazılım tasarımı sorunlarının çoğuyla başa çıkmamızı sağlayan tasarım ilkeleridir.  Nesneye Yönelik Programlamada (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Object Oriented Programming&lt;/code&gt; - OOP) yazılım tasarımının daha anlaşılır, esnek ve bakımı kolay hale getirmek için kullanılan prensiplerden oluşmaktadır. Bu prensipler ilk defa &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Uncle Bob (Robert C. Martin)&lt;/code&gt; tarafından derlenmiştir.&lt;/p&gt;

&lt;p&gt;Hayattaki diğer prensiplerde olduğu gibi, her SOLID prensibi yanlış kullanılabilir. Dolayısıyla; anlaşılabilir, bakımı kolay ve esnek bir kod yerine, SOLID prensipleriyle daha kötü ve karmaşık kodlar elde edebilmek mümkündür. Bu nedenle, dikkatli bir şekilde düşünmek ve bu ilkeleri yalnızca gerektiğinde uygulamak; temiz bir kod yazmanın temel prensibidir.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4 id=&quot;solid-kısaltmasını-oluşturan-prensipler&quot;&gt;SOLID kısaltmasını oluşturan prensipler:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S&lt;/code&gt;&lt;/strong&gt; - &lt;a href=&quot;http://omereryilmaz.com/single-responsibility-principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Class&apos;ların iyi tanımlanmış tek sorumlulukları olmalı.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O&lt;/code&gt;&lt;/strong&gt; - Open / Closed Principle - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Class&apos;lar genişlemeye açık, değişime kapalı olmalı.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;L&lt;/code&gt;&lt;/strong&gt; - Liskov Substitution Principle  - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Base class&apos;tan türetilenler, base class yerine geçebilmeli.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;I&lt;/code&gt;&lt;/strong&gt; - Interface Segregation Principle  - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Küçük interface&apos;ler oluşturularak, gereksiz metod kullanımının önüne geçilmeli.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D&lt;/code&gt;&lt;/strong&gt; - Dependency Inversion Principle  - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yüksek seviyedeki class&apos;lar düşük seviyedeki class&apos;lara bağımlı olmamalı.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; 
 &lt;/p&gt;

&lt;h5 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod&quot;&gt;The Principles of OOD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code-maze.com/solid-principles/&quot;&gt;Code Maze&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.c-sharpcorner.com/UploadFile/damubetha/solid-principles-in-C-Sharp/&quot;&gt;C-Sharp Corner&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dotnettricks.com/learn/designpatterns/solid-design-principles-explained-using-csharp&quot;&gt;DotNet Tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sun, 08 Aug 2021 02:28:00 +0300</pubDate>
				<link>http://omereryilmaz.com/solid-prensipleri/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/solid-prensipleri/</guid>
			</item>
		
			<item>
				<title>Çürüyen Yazılım Tasarımı (Rotting Design)</title>
				<description>&lt;p style=&quot;text-align:justify;&quot;&gt;
Jack Reeves 1992 yılında yaynladığı bir makalede, yazılım sistemi tasarımının kriterlerini karşılayan tek yazılım dökümantasyonun, kaynak kodları olduğu kavramını ortaya koydu [1]. Bu kavrama göre yazılım tasarımı, kaynak kodları temsil eden soyut bir kavram iken; UML (Unified Modelling Language) diyagramları ise  tasarımın parçalarını temsil etmektedir.

Yazılım büyüdükçe; tasarım, karmaşık hale gelme eğilimdindedir. Böyle bir durumun sonucunda; karmaşık, bakımı zor, modüllerin birbirine sıkı sıkıya bağlı, basit değişikliklerin bile gerçekleştirilmesinin çok zor olacağı bir kod yapısı ortaya çıkar.  Bu, yazılım tasarım sisteminin ve haliyle yazılım projesinin çürümesi anlamına gelmektedir.
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4 id=&quot;yazılım-tasarımı-neden-çürür&quot;&gt;Yazılım Tasarımı Neden Çürür?&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Değişikliklere kolayca uyum sağlanamayan geliştirme ortamlarında; gereksinimler ilk tasarımın ön görmediği şekillerde değiştiğinde, yazılım sisteminin tasarımında bozulmalara neden olmaktadır. Çoğu zaman bu tarz değişikliklerinin veya eklemelerin hızlı bir şekilde yapılması istenildiğinde sistemin orijinal tasarımının bozulması önemsenmez. Ancak asıl yapıyı ihlal eden bu tarz değişiklikler devam ettikçe kod yapısını işin içinden çıkılmaz hale getirir. 
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4 id=&quot;tasarım-kokuları-design-smells&quot;&gt;Tasarım Kokuları (Design Smells)&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Robert ve ark. [2006] göre, zayıf bir şekilde tasarlanmış yazılımların yedi çürüme belirtisi bulunmaktadır. Bu belirtilerden herhangi biri ortaya çıktığında yazılımın çürüdüğü veya çürümeye başladığı anlaşılabilmektedir.
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Katılık (Rigidity)&lt;/li&gt;
  &lt;li&gt;Kırılganlık (Fragility)&lt;/li&gt;
  &lt;li&gt;Hareketsizlik (Immobility)&lt;/li&gt;
  &lt;li&gt;Akışmazlık (Viscosity)&lt;/li&gt;
  &lt;li&gt;Gereksiz karmaşıklık (Needless complexity)&lt;/li&gt;
  &lt;li&gt;Gereksiz tekrar (Needless repetition)&lt;/li&gt;
  &lt;li&gt;Bulanıklık (Opacity)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;katılık-rigidity&quot;&gt;Katılık (Rigidity)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Yazılımın, basit yollarla bile değiştirilmesinin zor olma eğilimi göstermesidir. Yapılacak bir değişiklik, bağımlı modüllerde de değişiklikler yapılmasına neden oluyorsa, bu yazılım tasarımının katı olduğunu belirtir. Tasarım; değiştirilmesi gereken ne kadar modül veya bağımlı bileşen varsa o kadar katı olduğu anlamına gelmektedir.
&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;kırılganlık-fragility&quot;&gt;Kırılganlık (Fragility)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Yazılımın, bir yerinde değişiklik yapıldığında buna tepki olarak birçok yerinde kırılma eğilimi göstermesidir. Genelde bu özelliğe sahip yazılımlarda sorunlar çözüldükçe daha fazla sorunlar çıkar. Sonuç olarak bir değişikliğin bile kolay bir şekilde tasarımı bozan durumlar, tasarımın kırılganlığına işaret etmektedir.
&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;hareketsizlik-immobility&quot;&gt;Hareketsizlik (Immobility)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Yazılımda, diğer sistemlerde faydalı olabilecek modüller içerdiğinde hareketsizlik eğilimi gösterir. Bu bileşenleri orjinal yerinden ayırmak risklidir ve çok çaba gerektirir. Modüllerin arasındaki ilişki derecesine de `coupling` adı verilmektedir. 
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;akışmazlık-viscosity&quot;&gt;Akışmazlık (Viscosity)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Akışmazlık belirtisi iki formda ortaya çıkmaktadır: ortamın ve yazılımın akışmazlığı. Ortamın akışmazlığı, geliştirme yapılan ortamın yavaş ve verimsiz olduğu durumlarda ortaya çıkar. Bu gibi durumların ortaya çıkması, çoğunlukla alınan görevin bir an önce yapılabilmesi için yazılım orijinal tasarımı gözardı edilmesiyle olur. Yazılımın akışmazlığında ise geliştiriciler tasarımı koyuyan zor yöntemler yerine kendilerine daha kolay yöntemleri tercih edebilmektedirler. Bu şekilde de yazılım tasarımının orijinal felsefesi gözardı edilmiş olur. Her iki durumda da akışmazlık olan bir proje, yazılım tasarımın korunmasının zor olduğu bir projedir. Sonuç olarak tasarımı korurken geliştirmeyi kolaylaştıracak; sistemler ve proje ortamları oluşturmak gerekmektedir.
&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;gereksiz-karmaşıklık-needless-complexity&quot;&gt;Gereksiz Karmaşıklık (Needless Complexity)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Bir tasarım; hali hazırda kullanışlı olmayan öğeler içerdiğinde, gereksiz bir karmaşıklık ortaya çıkabilmektedir. Birçok beklenmedik duruma hazırlanmak, tasarımı hiç kullanılmayan yapılarla dolu hale getirir. Kullanılmayan bu yapılar, yazılım tasarımsal olarak ağırlığını da arttırır. Sonuç olarak ortaya; karmaşık ve anlaşılması zor hale gelen bir yazılım ortaya çıkar.
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;gereksiz-tekrar-needless-repetition&quot;&gt;Gereksiz Tekrar (Needless Repetition)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Yeterince soyutlama yapılmayan yazılımlarda gereksiz kod tekrarları kaçınılmazdır. Kod tekrarının çok olması sistemdeki gereksiz kod fazlalığını arttırır. Gereksiz kod fazlalıkları da sistemin anlaşılmasını ve bakımını zorlaştırır. 
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h6 id=&quot;bulanıklık-opacity&quot;&gt;Bulanıklık (Opacity)&lt;/h6&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Bulanıklık, kodun okuması ve anlaşılmasının zor olma eğiliminde olduğunu belirtir. Zamanla gelişen kod daha bulanık hale gelme eğilimdedir. Bulanıklığı minimumda tutarak; açık ve anlaşılabilir kod yazmak ise sürekli çaba gerektiren bir eylemdir.
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4 id=&quot;çürümelerden-kaçınmak&quot;&gt;Çürümelerden Kaçınmak&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Robert C. Martin’in 2000 yılında yazılım tasarımı sorunlarının çoğuyla başa çıkmamızı sağlayan &lt;a href=&quot;http://omereryilmaz.com/SOLID-prensipleri&quot; target=&quot;_blank&quot;&gt;SOLID prensipleri&lt;/a&gt;&apos;ni tanıttı. Bu prensipler göz önüne alınarak oluşturulan tasarımlar çürümeyi minimuna indirirerek; tasarımı daha anlaşılır, esnek ve bakımı kolay hale getirir.
&lt;/p&gt;

&lt;p&gt; 
 &lt;/p&gt;

&lt;h5 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;[1] Jack W. Reeves, “What is Software Design?”, 1992 C++ Journal.&lt;/li&gt;
  &lt;li&gt;[2] Robert C. Martin and Micah Martin, “Agile Principles, Patterns, and Practices in C#”, 2006.&lt;/li&gt;
  &lt;li&gt;[3] Alex Atomei, 2020, “Rotting Design”, https://www.cognizantsoftvision.com/blog/rotting-design/&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Wed, 04 Aug 2021 17:22:00 +0300</pubDate>
				<link>http://omereryilmaz.com/curuyen-yazilim-tasarimi/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/curuyen-yazilim-tasarimi/</guid>
			</item>
		
			<item>
				<title>Hello World Of Jekyll</title>
				<description>&lt;p style=&quot;text-align: justify;&quot;&gt;
Bu yazımla birlikte Jekyll dünyasına adım atmış bulunmaktayım. Beni veritabanı bağımlılığından, wordpress&apos;in sürekli gelen güncellemelerinden kurtaracak olan bu arkadaş, statik sayfanın hızını sunarken, dinamik sayfanın konforunu aratacak mı bilmiyorum. Kişisel websiteleri için dinamik sayfalara imkan sağlayan wordpress gibi teknolojiler biraz kaynak israfı gibi. Bu teknolojide Github hosting olarak kullanılarak, hosting masraflarından da kurtulmuş oluyoruz.  
&lt;/p&gt;
&lt;p&gt;
Şimdilik ilk kelimelerim bu kadar olsun, sonra güncellerim. Sanırım...
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Aylar sonra gelen g&amp;uuml;ncelleme (Y&amp;uuml;zeysel deneyimlerim) (2018, NOV 24);&lt;/h4&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;Wordpress&apos;den Jekyll&apos;e ge&amp;ccedil;tiğimden beri i&amp;ccedil;inde olduğum yoğunluktan dolayı bu yazı hari&amp;ccedil; hen&amp;uuml;z yeni bir blog yazısı yazmış değilim ama bu Jekyll&apos;e ge&amp;ccedil;iş d&amp;ouml;neminde karşılaştığım bazı şeyleri kısaca yazmaya &amp;ccedil;alışacağım.&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Wordpress&apos;den &amp;ccedil;evrilen makaleleri tek tek tekrar d&amp;uuml;zenlemek gerekiyor. Resim kaynak yolları, Wordpress&apos;de eklenti kullarak oluşturulan tablo veya kodlar v.s.&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Yazılarınızdaki en ufak d&amp;uuml;zenlemenizde (&amp;Ouml;rn. nokta koymayı unuttuğunuzda) tekrar build edip tekrar github&apos;a push etmeniz gerekiyor. Build edilmeyen değişiklikler ge&amp;ccedil;ersiz sayılıyor.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Wordpress veya Blogger gibi teknolojilerde alışılmış yazı yazıp anında yayınlama veya d&amp;uuml;zenleme konforu yerine frontend developer tarzına bırakıyor. Basit bir html edit&amp;ouml;r işinizi kolaylaştırabilir. (&amp;ouml;rn. &lt;a href=&quot;https://htmled.it/editoru/ &quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;htmled.it&lt;/a&gt;)&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Frontend demişken, Jekyll saf haldeyken (eklentisiz) Bootstrap&apos;ı ne yazıkki desteklemiyor. Desteklemesi i&amp;ccedil;in ekstra baya ayar yapılması gerekiyor. Hen&amp;uuml;z o işlere girmedim. Belki basit bir yolu da vardır, bulamadım.&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Jekyll, eklentiyle (benim kullandığım temada mevcuttu) blog yazılarınızı kategorilemeye imkan sağlıyor ama ne yazık ki GitHub bunu desteklemiyor. Destekleyen &amp;uuml;cretli hosting firmaları var(mış).&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Jekyll&apos;e ge&amp;ccedil;tiğinizde yazı linklerinizin aynı olmasına dikkat etmeniz, Google başta olmak &amp;uuml;zere diğer arama motorlarındaki yerinizi koruyacaktır.&amp;nbsp;&amp;nbsp;&lt;/li&gt;
&lt;li style=&quot;text-align: justify;&quot;&gt;Yazılarınızda kullandığınız resimleri isimlendirirken dikkat etmenizde fayda var. Yazılarınız çoğaldıkça resim isimlerinizin çakışma ihtimali daha da artacaktır. Benim önerim her yazının resimleri için ayrı klasör oluşturmanız (/images/yazinizin_ismi). Ayrıca resim isimlendirmede kullanılan büyük ve küçük harfler github&apos;a push ettiğinizde başınıza bela olabiliyor. Bu sorun için de resim isimlendirmelerinde sadece küçük harf kullanmanız bu sorunun önüne geçecektir.&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Fri, 27 Jul 2018 21:43:01 +0300</pubDate>
				<link>http://omereryilmaz.com/hello-world-of-jekyll/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/hello-world-of-jekyll/</guid>
			</item>
		
			<item>
				<title>Quantum Computation Language</title>
				<description>&lt;h3 style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#333333;&quot;&gt;QCL (Quantum Computation Language) Nedir?&lt;/span&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle2&quot; style=&quot;color:#000000;&quot;&gt;QCL (Kuantum Hesaplama Dili),  kuantum bilgisayarlar için mimariden bağımsız yüksek seviyeli bir programlama dilidir. Kuantum algoritmalarının eksiksiz uygulanmasını ve simülasyonunu sağlar[1].&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;img class=&quot;aligncenter wp-image-917 size-full&quot; src=&quot;/images/qcl-mimarisi.png&quot; alt=&quot;&quot; width=&quot;760&quot; height=&quot;414&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; Şekil 1.&lt;/strong&gt; QCL’nin Hibrit Mimarisi [2].&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;QCL dili C++ ile yazılmış yorumlayıcı program üzerinden kullanılabilmektedir. Kuantum arkaplanını taklit etmek için sayısal simülasyon kütüphanesini (libqc) kullanmaktadır. Bu program açık kaynak olarak geliştirilmiştir ve &lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;http://tph.tuwien.ac.at/~oemer/qcl.html &lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;adresinden temin edinilebilir. En son sürümü 0.6.4 versiyon numarasıyla 2014 yılında yayınlanmıştır.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#333333;&quot;&gt;Yorumlayıcının Çalıştırılması (Windows İçin):&lt;/span&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot; style=&quot;color:#000000;&quot;&gt;Dil Linux’a uyumlu çıkarıldığı için Windows’da çalışması bazı özel ayarların yapılması gerekmektedir. Bunun için öncelikle Cygwin aracının indirilmesi (https://cygwin.com) ve kurulum sırasında da aşağıda belirtilen paketlerin seçilip indirilmesi gerekmektedir[3].&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;strong&gt;Yükleme esnasında seçilip indirilmesi istenen paketler:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;Devel altındaki..&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;bison&lt;/span&gt;&lt;/li&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;flex&lt;/span&gt;&lt;/li&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;gcc-g++&lt;/span&gt;&lt;/li&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;libreadline-devel&lt;/span&gt;&lt;/li&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;make&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;
Graphics altındaki..&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;libplotter-devel&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;Libs altındaki..&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;libncurses-devel
&lt;/span&gt;&lt;/li&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;libX11-devel&lt;/span&gt;&lt;/li&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;libXt-devel
&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;Web altındaki..&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;wget&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;İndirme ve yükleme işlemi tamamlandıktan sonra Cygwin programı yönetici modda açılıp, aşağıda belirtilen komutlar çalıştırılır. (Bu komutlar o andaki mevcut QCL sürümlerine göre değişiklik gösterebilir.)&lt;/span&gt; Aşağıdaki komutlar,  &lt;span class=&quot;fontstyle0&quot;&gt;QCL kaynak kodları bilgisayara indirir ve sıkıştırılmış halde olan dosyayı indirildiği dizine çıkarır.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;$ wget http://tph.tuwien.ac.at/~oemer/tgz/qcl-0.6.4.tgz
$ tar xvzf qcl-0.6.4.tgz&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Daha sonra  i&lt;span class=&quot;fontstyle0&quot;&gt;ndirilen QCL kaynak kodu aşağıdaki komutlar kullanılarak derlenir.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;$ cd qcl-0.6.4
$ make&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;QCL yorumlayıcısını/simülatörünü çalıştırmak içinde aşağıdaki komut kullanılır.&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;$ ./qcl&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;QCL çalıştığında komut satırında aşağıdakine benzer bir çıktının elde edileceği görülecektir.&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;QCL Quantum Computation Language (64 qubits, seed 1494298832)
[0/64] 1 |0&amp;gt;
qcl&amp;gt;&lt;/pre&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h6&gt;&lt;/h6&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3 style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#333333;&quot;&gt;QCL ‘deki Bazı Önemli Noktalar&lt;/span&gt;
&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Veri Tipleri ve Değişkenler&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-veritipi.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-890&quot; src=&quot;/images/qcl-veritipi.png&quot; alt=&quot;&quot; width=&quot;491&quot; height=&quot;166&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Tablo 1:&lt;/strong&gt; Klasik veri tipleri&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle3&quot;&gt;
&lt;/span&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot;&gt;Örnek: &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle3&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Bir değişkenin tanımlanması.&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; int a; //degiskenin tanimlanmasi
qcl&amp;gt; a=17; //degiskene deger atanmasi
qcl&amp;gt; print a; //degiskenin ekrana basilmasi&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt; Operatörler &lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-op.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-889&quot; src=&quot;/images/qcl-op.png&quot; alt=&quot;&quot; width=&quot;449&quot; height=&quot;473&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; Tablo 2:&lt;/strong&gt; QCL operatörler &lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; &lt;span class=&quot;fontstyle0&quot;&gt;Fonksiyonlar&lt;/span&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-func.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-888&quot; src=&quot;/images/qcl-func.png&quot; alt=&quot;&quot; width=&quot;643&quot; height=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; Tablo 3:&lt;/strong&gt; QCL Aritmatik fonksiyonlar &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; &lt;span class=&quot;fontstyle0&quot;&gt;Örnek: &lt;/span&gt;&lt;/strong&gt;&lt;span class=&quot;fontstyle2&quot;&gt;Bir sayının logaritmasının hesaplanması ( log&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;2 &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;32 = 5 )&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;qcl&amp;gt; print log(32,2);
: 5&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Diğer Fonksiyonlar&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-other-func.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-892&quot; src=&quot;/images/qcl-other-func.png&quot; alt=&quot;&quot; width=&quot;780&quot; height=&quot;211&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; Tablo 4:&lt;/strong&gt; QCL diğer fonksiyonlar &lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
 	&lt;li style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Girdi (Input)&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;Konsoldan girdi değerleri “input” komutuyla alınır.
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; int sayi;
qcl&amp;gt; input &quot;Bir sayi giriniz : &quot;,sayi;
? Bir sayi giriniz : 35&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; &lt;span class=&quot;fontstyle0&quot;&gt;Çıktı (Output)&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Çıktılar ekrana “print” komutuyla basılır. Virgülle ayrılmış ifade veya değişkenlerin listesini konsol ekranına yazdırır.&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; int i=3; real x=pi; complex z=(0,1); boolean b;
qcl&amp;gt; print i,x,z,b;
: 3 3.14159 (0,1) false&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt; Koşullu İfadeler (If - else)&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle2&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Koşullu ifadeler klasik programlama dillerinde olduğu gibi “if - else” komutlarıyla&lt;/span&gt;
&lt;span style=&quot;color:#000000;&quot;&gt;gerçekleştirilir.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle2&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Örnek:&lt;/span&gt;&lt;/strong&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;qcl&amp;gt; int a=1; int b=2;
if (a==b) {print &quot;a esittir b ye.&quot;;} else {print &quot;a esit degildir b ye.&quot;;}
: a esit degildir b ye.&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt; Döngüler&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Döngüler “for” komutuyla oluşturulur. For içerisinde integer bir sayaç tanımlanır ve bu sayaç süresince ilgili bloğun tekrar tekrar çalıştırılması sağlanır.&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; int i;
qcl&amp;gt; for i=10 to 0 step -2 {print &quot;sayi : &quot;,i;}
: sayi : 10
: sayi : 8
: sayi : 6
: sayi : 4
: sayi : 2
: sayi : 0&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span style=&quot;color:#000000;&quot;&gt; &lt;span class=&quot;fontstyle0&quot;&gt;&lt;strong&gt;Koşullu Döngüler&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle2&quot;&gt;Döngüler koşul sağlandığı müddetçe devam ettirilir. Bu durum “until” veya “while” komutuyla sağlanır. “until” de önce ilgili blok çalıştırılır sonra koşul kontrol ettirilir, “while” da ise önce koşul kontrol edilir sonra blok çalıştırılır.
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Örnek:&lt;/span&gt;&lt;/strong&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;qcl&amp;gt; {print &quot;i degeri : &quot;,i,&quot; oldu.&quot;; i=i-1;}until i==0;
: i degeri : 5 oldu.
: i degeri : 4 oldu.
: i degeri : 3 oldu.
: i degeri : 2 oldu.
: i degeri : 1 oldu.&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;veya&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;while i&amp;gt;0 {print &quot;i degeri : &quot;,i,&quot; oldu.&quot;; i=i-1;};
: i degeri : 5 oldu.
: i degeri : 4 oldu.
: i degeri : 3 oldu.
: i degeri : 2 oldu.
: i degeri : 1 oldu.&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;Kuantum Depolama ve Kayıtçılar (Registers)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle2&quot; style=&quot;color:#000000;&quot;&gt;Kuantum bilgisayarlarda olduğu gibi QCL’de de en küçük depolama birimi &lt;strong&gt;qubit&lt;/strong&gt;’tir. QCL’de qubit formatında değişken tanımlanması klasik programlamadaki pointer’lar gibi bellekten alan tahsisiyle gerçekleştirilmektedir. Simülasyon ortamı olarak 32 veya 64 qubitlik alan tahsisi etmemize imkan sağlamaktadır. Bu değişken tanımı ve alan tahsisi işlemi için “&lt;strong&gt;qureg&lt;/strong&gt;” komutu kullanılmaktadır. “&lt;strong&gt;dump&lt;/strong&gt;” komutu ise değişkenimizin bra-ket notasyonunda ekrana basılmasını sağlar. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-bloch-kuresi.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-895&quot; src=&quot;/images/qcl-bloch-kuresi.png&quot; alt=&quot;&quot; width=&quot;337&quot; height=&quot;295&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-1-qubit.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-896&quot; src=&quot;/images/qcl-1-qubit.png&quot; alt=&quot;&quot; width=&quot;276&quot; height=&quot;39&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Şekil 2.&lt;/strong&gt; Bloch küresi üzerinde bir qubit&apos;in durumu&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;qcl&amp;gt; qureg x[1]; // 1 qubitlik x isminde alan ayir
qcl&amp;gt; dump; // x degiskenini braket notasyonunda ekrana bas.
: STATE: 1 / 64 qubits allocated, 63 / 64 qubits free
1 |0&amp;gt;&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt; &lt;span class=&quot;fontstyle0&quot;&gt;Kapılar&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span class=&quot;fontstyle1&quot; style=&quot;color:#000000;&quot;&gt;Kuantum bilgisayarlar kapılar tersinebilir (reversible) özelliklidir. Yani bir girdi için aldığımız sonuca, aynı işlemi uyguladığımızda başlangıçtaki girdi değerini elde edebilir. Örneğin, ket 0 ifadesine bir Not kapısı uyguladık diyelim; Not (|0&amp;gt;) = |1&amp;gt; elde ederiz. Daha sonra elde ettiğimiz sonuç olan ket 1’e tekra Not kapısı uygularsak Not(|1&amp;gt;) = |0&amp;gt; ket 0’ı yani başlangıçtaki durumu elde etmiş oluruz.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle1&quot;&gt;
&lt;/span&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;strong&gt;Bazı önemli kapılar&lt;/strong&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot; style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Pauli Kapıları:&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;X, Y ve Z Pauli kapıları, Bloch küresinde(Şekil 2) sırasıyla x,y ve z eksenleri etrafında döndürmelere &lt;span class=&quot;fontstyle1&quot;&gt;karşılık gelmektedir. Matrissel gösterim şekilleri aşağıdaki gibidir.&lt;/span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;a href=&quot;/images/qcl-pauli-gates.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-897&quot; src=&quot;/images/qcl-pauli-gates.png&quot; alt=&quot;&quot; width=&quot;239&quot; height=&quot;114&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Şekil 3&lt;/strong&gt;. Pauli Kapılarının matrissel gösterimi&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; qureg a[1];
qcl&amp;gt; dump;
: STATE: 1 / 64 qubits allocated, 63 / 64 qubits free
1 |0&amp;gt;
qcl&amp;gt; Not(a);
[1/64] 1 |1&amp;gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle1&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Tersinebilir (reversible) özelliği&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true&quot;&gt;qcl&amp;gt; Not(a);
[1/64] 1 |0&amp;gt;&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;span class=&quot;fontstyle0&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Hadamard Kapısı:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;fontstyle2&quot; style=&quot;color:#000000;&quot;&gt;Bu kapı qubitleri süperpozisyon durumuna getirmektedir. Aşağıda gösterildiği gibi H matrisi ile ifade edilmektedir. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;/images/qcl-hadamard-gate.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-898&quot; src=&quot;/images/qcl-hadamard-gate.png&quot; alt=&quot;&quot; width=&quot;219&quot; height=&quot;80&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Şekil 4.&lt;/strong&gt; Hadamard kapısının matrissel ifadesi&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;a href=&quot;/images/qcl-hadamard-one-qubit.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-899&quot; src=&quot;/images/qcl-hadamard-one-qubit.png&quot; alt=&quot;&quot; width=&quot;207&quot; height=&quot;83&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Şekil 5.&lt;/strong&gt; Hadamard kapısının Ket 0 ve Ket 1&apos;e etkisi&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;qcl&amp;gt; qureg a[1]; // 1 qubitlik degisken tanimla
qcl&amp;gt; dump; // bra-ket notasyonunda goster
: STATE: 1 / 64 qubits allocated, 63 / 64 qubits free
1 |0&amp;gt;
qcl&amp;gt; H(a); // a degiskenine Hadamard uygula
[1/64] 0.70711 |0&amp;gt; + 0.70711 |1&amp;gt;&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Mevcut Kütüphane ve Algoritmaların Çalıştırılması&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;QCL ile birlikte birkaç tane kütüphane ve hazır yazılmış algoritmalar gelmektedir. Bu kütüphaneler QCL&apos;nin bulunduğu dizinde lib klasörü altında bulunmaktadır (Benim bilgisayarımda bulunduğu yer C:qcllib). Buradaki kütüphaneleri kodumuza dahil edip kullanabilmek için aşağıdaki komutları uygulamamız gerekmektedir.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;&quot;&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Örnek:&lt;/strong&gt; Mevcut Grover arama algoritmasının çalıştırılması.&lt;/span&gt;&lt;/p&gt;

&lt;pre class=&quot;theme:dark-terminal toolbar:1 lang:default decode:true &quot;&gt;omer@OMR ~
$ cd qcl-0.6.4 //qcl nin bulundugu dizine git

omer@OMR ~/qcl-0.6.4
$ ./qcl //qcl yi calistir
QCL Quantum Computation Language (64 qubits, seed 1494971969)
[0/64] 1 |0&amp;gt;
qcl&amp;gt; include &quot;grover.qcl&quot;; //grover isimli kutuphaneyi dahil et
qcl&amp;gt; grover(50); //grover kutuphanesinde bulunan grover() fonk. calistir
: 6 qubits, using 4 iterations
: measured 50&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kaynakça:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;[1] Bernhard Omer. Mar 27 2014. http://tph.tuwien.ac.at/~oemer/qcl.html&lt;/li&gt;
 	&lt;li&gt;[2] Bernhard Omer. Jan 20 2000. Quantum Programming in QCL&lt;/li&gt;
 	&lt;li&gt;[3] Brian Pursley. Dec 20 2015. https://blog.cinlogic.com/2015/12/20/running-qcl-quantum-computationlanguage-on-windows/&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 17 May 2017 04:08:21 +0300</pubDate>
				<link>http://omereryilmaz.com/quantum-computation-language/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/quantum-computation-language/</guid>
			</item>
		
			<item>
				<title>Angular Uygulamasının GitHub Page&apos;de Yayınlanması</title>
				<description>&lt;p style=&quot;text-align:center;&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/b5HbOyRKw8Q&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;Angular CLI&lt;/h1&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Angular CLI, Angular uygulamalar için oluşturulmuş ember-cli temeline dayanan bir CLI&apos;dır (&lt;em&gt;Command Line Interface CLI, Command Line User-Interface olarak da bilinir. Kullanıcının veya istemcinin ardışık olarak komutlar göndererek etkileşim kurmasını sağlar.&lt;/em&gt;). Angular uygulamalarını başlangıç durumununa getiren (initialize), iskelet yapısınının oluşturulmasını sağlayan (scaffold) ve bakım işlemlerinin yapılmasını (maintain) kolaylaştıran bir araçtır. Bilindiği üzere bir Angular uygulamasını ayağa kaldırmak biraz zahmetli bir iştir. Bu zahmetli işi bir kaç komut satırıyla bizim yerimize yapıp uygulamanın ayağa kaldırılmasını sağlar.
&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Angular CLI ve uygulamanın bağımlılıkları (dependencies) için Node 4 veya daha üst sürümüyle birlikte NPM 3 veya daha üst sürümünün bilgisayarınızda kurulu olması gerekmektedir.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Bu yazımızda Angular CLI yardımıyla bir Angular 2 uygulaması oluşturup bunu Github üzerinde bir web sayfası olarak yayınlamaya çalışacağız.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Angular CLI ile Angular Uygulamasının Oluşturulması&lt;/h2&gt;
&lt;ol&gt;
 	&lt;li&gt;Comand Prompt’la hangi klasöre projemizi oluşturacaksak cd komutuyla o klasöre gidiyoruz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;cd C:\AngularOrnekler&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol start=&quot;2&quot;&gt;
 	&lt;li&gt;“&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;npm install -g angular-cli&lt;/span&gt;&lt;/strong&gt;” Angular-Cli ‘ı indiriyoruz.&lt;/li&gt;
 	&lt;li&gt;“&lt;span style=&quot;color:#008080;&quot;&gt;&lt;strong&gt;ng new angular-ornek&lt;/strong&gt;&lt;/span&gt;” komutuyla ilgili klasöre projemizi oluşturuyoruz.&lt;/li&gt;
 	&lt;li&gt;“&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;cd angular-ornek&lt;/span&gt;&lt;/strong&gt;” komutuyla projemizin bulunduğu klasöre gidiyoruz.&lt;/li&gt;
 	&lt;li&gt;“&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;ng serve&lt;/span&gt;&lt;/strong&gt;” komutuyla projemizi test etmek için çalıştırıyoruz.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;Projenin GitHub’a uygun hale getirilmesi&lt;/h2&gt;
&lt;ul&gt;
 	&lt;li&gt;“&lt;span style=&quot;color:#008080;&quot;&gt;&lt;strong&gt;cd angular-ornek&lt;/strong&gt;&lt;/span&gt;” ile projemizin klasörüne gidip, yine console üzerinde “&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;code .&lt;/span&gt;&lt;/strong&gt;” komutunu çalıştırıp, projenin visual code’da açılmasını sağlıyoruz.&lt;/li&gt;
 	&lt;li&gt;Projemizin github üzerinden yayınlanabilmesi için gh-pages branch’ı oluşturmamız lazım, projemiz bu branch üzerinden yayın yapacak. Bunun için aşağıdaki kodu çalıştırırız;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;npm i -g angular-cli-ghpages&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol start=&quot;3&quot;&gt;
 	&lt;li&gt;Package.json içerisine şu satırı ekliyoruz;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;“scripts”: { &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;“deploy”: “ng build -sm -ec -bh /repo ismi/ &amp;amp; ngh –no-silent”&lt;/span&gt;&lt;/strong&gt;,…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOT :&lt;/strong&gt; 3.maddedeki repo ismini daha önceden github sayfanızda oluşturduğunuz repository ismi olacak.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Projenin GitHub’a yüklenmesi&lt;/h2&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/angular_github_gizli.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
 	&lt;li&gt;Öncelikle yukarıdaki resimdeki gösterilen “&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt; .git&lt;/span&gt; &lt;/strong&gt;“ dosyasını siliyoruz.&lt;/li&gt;
 	&lt;li&gt;“&lt;strong&gt; &lt;span style=&quot;color:#008080;&quot;&gt;git init&lt;/span&gt; &lt;/strong&gt;” komutuyla git işlemini başlatıyoruz.&lt;/li&gt;
 	&lt;li&gt;“ &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;git add .&lt;/span&gt;&lt;/strong&gt; “ komutuyla yeni veya modifiye edilmiş dosyaları göndermek için hazırlıyoruz.&lt;/li&gt;
 	&lt;li&gt;“ &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;git commit -m &quot;My first commit&quot;&lt;/span&gt;&lt;/strong&gt; “ ilk commit’imizi oluşturuyoruz.&lt;/li&gt;
 	&lt;li&gt;&quot; &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;git remote add origin https://githubrepoadresi.git&lt;/span&gt;&lt;/strong&gt; &quot; komutunu çalıştırıp github bağlantısını oluşturuyoruz.&lt;/li&gt;
 	&lt;li&gt;“ &lt;span style=&quot;color:#008080;&quot;&gt;&lt;strong&gt;git remote&lt;/strong&gt;&lt;/span&gt; “ yazıp var olan bağlantıların listesini görebiliriz.&lt;/li&gt;
 	&lt;li&gt;&quot; &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;git push -u origin master&lt;/span&gt;&lt;/strong&gt; &quot; komutuyla projemizin tüm dosyalarını( -u ) github a gönderiyoruz.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;Angular Sayfasının GitHub’a Deploy Edilmesi&lt;/h2&gt;
&lt;ol&gt;
 	&lt;li&gt;“ &lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt;npm run deploy&lt;/span&gt;&lt;/strong&gt; “ komutuyla deploy işlemini başlatıyoruz.&lt;/li&gt;
 	&lt;li&gt;Bu işlem sona erdiğinde sayfamız yayınlanmış olacaktır. Sayfamızın linkine ise Github &amp;gt; Settings bölümünden ulaşabiliriz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/angular_github_settings.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/angular_github_pages.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
  &lt;strong&gt;Not: &lt;/strong&gt;Uygulamamızı deploy ettikten sonra herhangi bir güncelleme yaptıysak; bu güncellemenin sayfamızda gerçekleşmesi için öncelikle yaptığımız değişikliği commit etmemiz ve “&lt;strong&gt;&lt;span style=&quot;color:#008080;&quot;&gt; npm run deploy&lt;/span&gt;&lt;/strong&gt; ” komutunu tekrardan çalıştırarak deploy işlemini tekrarlamamız gerekmektedir (Yapılan değişiklikler birkaç dakika sonra sayfaya yansıyacaktır).
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kaynak Kodlar : &lt;/strong&gt;
&lt;a href=&quot;https://github.com/omreryilmaz/angular-ornek&quot;&gt;&lt;strong&gt;https://github.com/omreryilmaz/angular-ornek&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Demo : &lt;/strong&gt;&lt;a href=&quot;https://omreryilmaz.github.io/angular-ornek/&quot;&gt;&lt;strong&gt;https://omreryilmaz.github.io/angular-ornek/&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kaynakça:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;[1] https://en.wikipedia.org/wiki/Command-line_interface&lt;/li&gt;
 	&lt;li&gt;[2] https://www.npmjs.com/package/angular-cli&lt;/li&gt; 	
&lt;/ul&gt;
</description>
				<pubDate>Fri, 24 Mar 2017 01:06:00 +0300</pubDate>
				<link>http://omereryilmaz.com/angular-uygulamasinin-github-pagede-yayinlanmasi/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/angular-uygulamasinin-github-pagede-yayinlanmasi/</guid>
			</item>
		
			<item>
				<title>Özgünlük Nedir? Kriterleri Nelerdir?</title>
				<description>&lt;blockquote&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;&quot;Adem ne kadar şanslıydı, iyi bir şey söylediğinde kendinden önce kimsenin söylemediğini biliyordu.&quot;
-Mark Twain&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Özgünlük, akademik çalışmalarda önemli rol oynamaktadır; zaten bilimin temel amacı da daha önce kimsenin söylemediği şeyi söylemek veya yeni bir şey keşfetmektir. Psikolojide kreatif, hayalci veya özgün kişilik ve onun tanımlanması daha erken olmuştur. Bilim tarihçileri ise yenilikçilere veya yenikliklere katkıda bulunanları tanımlamak için “dâhi” ya da daha alçak gönüllü olarak “farklı düşünen” ifadelerini kullanmışlardır. Sosyologlar da yenilikçiliğe yol açan toplumsal faktörlere odaklanmışlardır. Araştırmacılar, bilim insanlarının özgünlüğü nasıl değerlendirdiği konusunu çoğu zaman görmezden gelmiştir. Bütün bunlarla birlikte akademik gözden geçirme sürecinde özgünlüğün nasıl tanımlanacağı akademik değerlendirmede çok büyük bir soru işaretidir. Bu soru genellikle çalışmanın özü aracılığıyla cevaplanabilir. Sorulan sorular, odaklanılan konu, sunulan teori, araştırma tasarımı ve verinin kendisi, özgünlük hakkındaki argümanlara sahip olan öğelerdir. Bu öğeler sayesinde çalışmanın özgünlüğü hakkında fikir edinilebilir[1].
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4&gt;Akademik Çalışmalardaki Özgünlük&lt;/h4&gt;
&lt;p&gt;İki ana başlıkta incelenebilir:&lt;/p&gt;
&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;&lt;strong&gt;Çalışma fikrinin özgünlüğü&lt;/strong&gt;: Araştırmacı, analiz için aynı çerçeveyi kullanarak başka bir yerde başka bir araştırma yapılmadığını ispatlamak zorundadır. Daha önceki çalışmaların ne yaptıklarını ve neyi yapmadığını analiz ederek kendi çalışmasında bunu gidermelidir. Yani önceki çalışmadaki bu boşluk kendi çalışmamızdaki özgünlüğü göstermektedir. Araştırmacının bu yaparken farklı dillerden mümkün olduğunca çok literatür taraması yapması gerekmektedir.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;strong&gt;Araştırma yazarlığı özgünlüğü: &lt;/strong&gt;Bunun anlamı da diğer araştırma raporlarının sadece belli bir miktarının benzer olmasına izin verilmesidir. Farklı kurum ve yayıncılar için bu oran %20 ile %25 arasında bir değerdir. Yayıncıların çoğu bunu “Turnitin” gibi çevrimiçi intihal kontrolü yapan yazılımlar ile kontrol etmektedirler [2].&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Çalışmalardaki Özgünlüğün Sağlanması ve Geliştirilmesi&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
	Cryer (1997) özgünlüğün yeniden değerlendirilmesi ve geliştirilmesi için aşağıdaki üç önemli süreci önermiştir:
&lt;/p&gt;
&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;Özgünlüğün ne anlama geldiğini, nasıl yorumlanabileceğini ve kendini nasıl gösterilebileceğini anlamak&lt;/li&gt;
 	&lt;li&gt;Özgünlüğü kolaylaştırmak için yan düşünceler ve yaratıcı beceriler edinmek ve kullanmak&lt;/li&gt;
 	&lt;li&gt;Bu becerilerin etkin bir şekilde gelişmesi için kuluçka dönemini oluşturmak&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Özetle, çalışmalarda özgünlüğü kolaylaştırmanın yolları olduğunu ancak zaman ve çaba gerektirdiğini öne sürmüştür.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Akademik seviyelerde çalışmaların hedefleri:&lt;/h4&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Lisans Düzeyi&lt;/th&gt;
&lt;th&gt;Yaklaşım&lt;/th&gt;
&lt;th&gt;Akademik Hedef&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lisans&lt;/td&gt;
&lt;td&gt;Yeniden Üretim&lt;/td&gt;
&lt;td&gt;Sunulan bilgilerin doğru olması (Bir analiz unsuru ile birlikte).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yüksek Lisans&lt;/td&gt;
&lt;td&gt;Çözümsel&lt;/td&gt;
&lt;td&gt;Basit Özgünlük: Materyali yeniden şekillendirmeyi veya bilgiyi başka yollarla düşünmeyi içerebilir.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Doktora&lt;/td&gt;
&lt;td&gt;Kuramsal&lt;/td&gt;
&lt;td&gt;Kreatif Özgünlük: Yeni Yaklaşımlar / Yeni Bilgiler&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;Özgünlüğün Kapsamı&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Özgünlüğün kapsamının değerlendirmenin en iyi yollarından biri, dünyada hâlâ keşfedilmeyen bir şeylerin olduğunu bilmektir. Aslında çalışmalar daha önce keşfi yapılmamış vahşi doğaya yapılan araştırmalara benzetilebilir. Bu benzetmede kaşif, keşif gezilerinin nasıl bir başarıya ulaşacağı hakkında belirli bir görüşe sahip olabilir ancak bunların çoğunun hayata geçirilemeyeceğini ve bu nedenle alternatiflere açık olması gerektiğini bilmelidir.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Araçlar, teknikler ve prosedürde özgünlük:&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırmacı literatürü araştırır, uzmanlarla görüşür ve temel bilgileri edinmek ve uygun araştırma metodolojisi geliştirmek için eğitime katılır. Bu kısım işlemler, araçlar, teknikler ve muhtemelen dahil edilecek kişiler ilgili kararlar içermektedir. Yeni ve test edilmemiş yollar kullanılırsa veya belirli amaca yönelik yeni prosedürler, araçlar ve teknikler geliştirilirse özgünlük iddiası artmış olacaktır.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Bilinmeyeni keşfetmekteki özgünlük:&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırmacının daha önce keşfedilmemiş veya araştırılmamış bir  konudaki çalışması bu alana girmektedir. Bu türdeki bir araştırma çalışmasındaki özgünlük daha açıktır. Ama bir çok çalışma alanında özgünlük kriterleri farklılık gösterebilmektedir.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Beklenmeyen durumlardaki özgünlük:&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırma çalışmasının belli bir aşamasında hiç keşfedilmemiş yeni yollar veya yöntemler ortaya çıkabilir. Bu yöntemler mutlaka özgündür ve onların son derece önemli olduğu ortaya çıkabilir. Öte yandan bu tarz yöntemler zaman veya çaba sarf etmeden de çıkması olasıdır. Araştırmacı bu yeni yöntem ve yollara sonucunda bir yere varılmayacak olsa bile özgünlüğü bakımından yönelebilmektedir.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Verilerde özgünlük:&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırmacı çalışması sırasında özgünlük kaygısıyla işleme koymadığı çok miktarda veri olabilmektedir. Bu yöntem özgünlük konusunda olası bir yol olmasına rağmen bazen çok da avantajlı olmayabilmektedir. Çünkü dahil ettiği verilerin de önemsiz olma ihtimali söz konusudur. Araştırmacı böyle bir ihtimali göz önünde bulundurarak veriler konusunda daha dikkatli olması gerekmektedir.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;Yöntemde veya kullanım alanında özgünlük&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırma çalışmalarında özgünlük, mutlaka onun yeni veya bilinmeyen bir şey olması gerekmemektedir. Bilinen veya daha önceden yayınlanmış veriler, yeni koşullarda test edildiğinde ortaya özgün durumlar çıkabilmektedir.  Bu durumlarla özgün ve anlamlı bir şeyler ortaya çıkarmak kabul edilebilirdir. Ancak çoğu zaman özgünlüğe giden bu yol araştırmacılar tarafından gözden kaçırılmaktadır.
&lt;p&gt;
&lt;br /&gt;


&lt;h4&gt;Yan üründe özgünlük&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Araştırma çalışması sırasında beklenmedik durumlar oluşabilir. Bu durumlar finansman kaynağının geri çekilmesi, ekipmanların çalışmaması gibi ciddi ve öngörülemeyen engeller şeklinde sıralanabilir. Bu tarz engeller karşısında araştırmacı biraz kreatif düşünerek bu durumdan kurtulabilir. Bu durumla gelen aksilik sonucudan herhangi bir ekip parçasının geliştirilmesi sonucu yan ürünler oluşabilir. Bunlara odaklanılabilir ve daha da geliştirilebilir. Ama tabiki araştırma çalışması da eserin yeni doğasını yansıtacak şekilde yeniden formüle edilmelidir.
&lt;/p&gt;
&lt;br /&gt;


&lt;h4&gt;Yayınlanma potansiyeli olarak özgünlük&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Özgünlüğü düşünmeyi teşvik etmenin faydalı bir yolu hakemli bir dergide yayınlama potansiyeli kavramıdır. Bu kavram araştırmacının çalışmasındaki özgünlüğü, daha anlamlı olarak görmesini sağlamaktadır. Eser veya çalışma yayınlanmaya layık görülmüş olsa bile araştırmacı tarafından yayınlanmak zorunlu değildir ama özellikle doktora düzeyinde bir veya bir kaç tane yayınlanmış dergi makalesi üretebilmelidir. Hakemli bir dergide yayınlanmak üzere kabul edilmiş bir çalışma, kişi için önemli bir artıdır.
&lt;/p&gt;
&lt;br /&gt;

&lt;h3&gt;Özgünlük Kriterleri&lt;/h3&gt;
&lt;ul&gt;
 	&lt;li&gt;Büyük miktardaki yeni verinin ilk kez yazılı olarak sunulması.&lt;/li&gt;
 	&lt;li&gt;Mevcut olan eserin ayrıntılarına inilmesi.&lt;/li&gt;
 	&lt;li&gt;Yeni bir ürünün oluşturulması veya mevcut ürünün geliştirilmesi.&lt;/li&gt;
 	&lt;li&gt;Mevcut bir teorinin farklı olarak yorumlanması.&lt;/li&gt;
 	&lt;li&gt;Daha önce yapılmamış deneysel çalışmalar.&lt;/li&gt;
 	&lt;li&gt;Bir sorunu çözebilmek için farklı bir metodolojik yaklaşımın kullanılması.&lt;/li&gt;
 	&lt;li&gt;Bilgiyi yeni ve farklı şekilde sentezleme.&lt;/li&gt;
 	&lt;li&gt;Mevcut veya bilinen bilgiler kullanılarak yeni bir yorum getirme.&lt;/li&gt;
 	&lt;li&gt;Başka şartlarda araştırmayı tekrarlama. Örneğin farklı bir ülkede.&lt;/li&gt;
 	&lt;li&gt;Mevcut fikirleri yeni çalışma alanlarında uygulama.&lt;/li&gt;
 	&lt;li&gt;Yeni bir araştırma aracının veye tekniğin geliştirilmesi.&lt;/li&gt;
 	&lt;li&gt;Farklı bir yaklaşım benimsemek. Örneğin farklı akademik alanlardaki bakış açısı.&lt;/li&gt;
 	&lt;li&gt;Araştırmaya dayalı bir çalışma belgesinin geliştirilmesi.&lt;/li&gt;
 	&lt;li&gt;Bilgiye daha önce yapılmamış bir şekilde ekleme yapma.&lt;/li&gt;
 	&lt;li&gt;Daha önce araştırma yapılmamış bir alan yada konu üzerinde araştırma yapma.&lt;/li&gt;
 	&lt;li&gt;Önceden incelenmiş bir konuda eleştirel bir analiz yapma [4].&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Çalışmalar yukarıdaki kriterlere göre değerlendirilip özgünlük hakkında karar verilebilir. Bütün bu kriterlere rağmen hala çalışmanın özgünlüğüyle ilgili soru işaretleri varsa tez danışmanıyla görüşülebilir. Ayrıca aynı meslekten veya sizi daha iyi tanıyan insanların tecrübelerinden yararlanılabilir.
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;


&lt;strong&gt;Kaynakça:&lt;/strong&gt;
&lt;ul&gt;
 	&lt;li&gt;[1] Michèle L. ve Ark. (2007). Evaluating Creative Minds: The Assessment of Originality in PeerReview.&lt;/li&gt;
 	&lt;li&gt;[2] Muhammad Subhan,https://www.researchgate.net/post/What_is_originality_in_research&lt;/li&gt; 
	&lt;li&gt;[3] Pat Cryer (2006). The Research Student&apos;s Guide to Success.&lt;/li&gt;
 	&lt;li&gt;[4] Phillips, E.M. &amp;amp; Pugh, D.S. (1994). How to get a PhD. USA: Open University Press.&lt;/li&gt; 	
&lt;/ul&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 08 Mar 2017 22:41:00 +0300</pubDate>
				<link>http://omereryilmaz.com/ozgunluk-nedir-kriterleri-nelerdir/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/ozgunluk-nedir-kriterleri-nelerdir/</guid>
			</item>
		
			<item>
				<title>TypeScript Nedir?</title>
				<description>&lt;p style=&quot;text-align:justify;&quot;&gt;
TypeScript, Microsoft çalışanı Anders Hejlsberg (C# tasarımcısı) tarafından tasarlanan açık kaynaklı programlama dilidir. TypeScript hem dil hem de araçlar kümesidir. TypeScript, JavaScript’in ek özellikler almış hali de denilebilir (Şekil 1). İstemci tarafında (client-side) veya sunucu tarafında (server-side) çalışabilen JavaScript uygulamaları geliştirmek için kullanılabilir.
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/typescript_javascript.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;Şekil 1. TypeScript ve JavaScript&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Kavramsal olarak JavaScript’i daha kolay ve güvenli bir şekilde yazmamızı sağlayan “sanal editör” olarak da düşünebiliriz. Büyük ve karmaşık kod yapısına sahip projelerde verimliliği arttırır. Uzun JavaScript satırlarını daha az komutla ifade etmemizi sağlar. Nedeni ise JavaScript’in fonksiyonel olmasına karşın TypeScript’in nesne yönelimli olmasıdır. Bunun yanı sıra TypeScript kodunu anlamak daha kolaydır. Eğer JavaScript biliyorsanız bunu TypeScript’de de kolayca kullanabilirsiniz. Yani var olan JavaScript kodlarınızı TypeScript dosyanızın içersine ekleyip derleyebilirsiniz.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
JavaScript büyük iş veya projeler için kullanıldığında belirli zorluklar ortaya çıkarmaktadır. C#, Java ve C++ gibi statik olarak derlenen diller, geliştiricinin derleme işlemi sırasında hata denetimi gerçekleştirirken, JavaScript ise çalıştırılıncaya kadar bu hata denetimini gerçekleştiremez. Microsoft, TypeScript ile birlikte derleme aşamasında hata denetimi yapılabilen bir JavaScript sunmayı amaçlamıştır.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;TypeScript Özellikleri :&lt;/h3&gt;
&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;Typescript, JavaScript&apos;in temel yapı taşlarını benimser. Dolayısıyla, yalnızca TypeScript&apos;i kullanmak için JavaScript&apos;i öğrenmeniz yeterlidir. Tüm TypeScript kodunun çalıştırılması için JavaScript diline dönüştürülmesi gerekir.&lt;/li&gt;
 	&lt;li&gt;TypeScript, diğer JS kütüphenelerini destekler. Derlenmiş TypeScript, herhangi bir JavaScript kodunda tüketilebilir. TypeScript ile oluşan JavaScript kodu mevcut tüm JavaScript frameworkleri, araçları ve kütüphanelerini yeniden kullanabilir.&lt;/li&gt;
 	&lt;li&gt;JavaScript, TypeScript’tir. Bunun anlamı .js uzantılı herhangi bir dosya .ts olarak yeniden adlandırabilir ve diğer TypeScript dosyalarıyla derlenebilir.&lt;/li&gt;
 	&lt;li&gt;TypeScript portatiftir. TypeScript, tarayıcılar, aygıtlar ve işletim sistemleri arasında taşınabilir. JavaScript’in çalıştığı herhangi bir ortamda çalışabilir. TypeScript’in çalışması için sanal makineye (VM) veya özel bir runtime çalışma ortamına ihtiyacı yoktur.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;TypeScript ve ECMAScript&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
ECMAScript, bir script dili standartıdır. Yayınlanmış 6 sürüm bulunmaktadır. Standartın 6. Versiyonuna “Harmony” kod adı verilmiştir. TypeScript, EcmaScript6 standartına sahiptir. Ayrıca temel dil özellikleri ECMAScript5 standartından yani JavaScript’in resmi şartnamesinden uyarlanmıştır (Şekil 2).
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/typescript1.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
	Şekil 2. TypeScript&apos;i oluşturan standartlar ve özellikler
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;Neden TypeScript?&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
TypeScript, CoffeScript ve Dart programlama dilleri gibi diğer muadillerinden üstün olup, JavaScript’in gelişmiş bir türevidir. Bunun yanı sıra CoffeScript ve Dart gibi diller kendi başlarına yeni dillerdir ve kendilerine özgü yürütme ortamlarına ihtiyaç duyarlar.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
TypeScript&apos;in çok popüler hale gelmesinin bir başka nedeni de Google Angular 2’dir. AngularJS’nin yeni sürümü resmi olarak JavaScript yerine tür denetimi (Type Checking) yeteneğinden dolayı TypeScript’i kullanacak şekilde uyarlanmıştır.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;TypeScript’in avantajları:&lt;/h4&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Derleme&lt;/strong&gt;: JavaScript’i test etmek için çalıştırılması gerekir. Bu, bir hatanın olması durumunda tüm kodu kontrol etmek anlamına gelmektedir. Dolayısıyla, kodda hatalar bulmaya çalışmak için saatler harcamanız gerekir. TypeScript transpiler, hata denetimi özelliğini sağlar. Bu, komut dosyasının çalıştırılmadan önce hataları görmemize yardımcı olur.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Güçlü Statik Tipleme&lt;/strong&gt;: TypeScript, &lt;strong&gt;TLS&lt;/strong&gt; (TypeScript Dil Servisi) aracılığıyla isteğe bağlı bir statik tipleme ve tür önerme sistemi ile birlikte gelir. TLS, herhangi bir tip tanımlanmamış değişkeni aldığı değere göre anlamlandırabilir
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
TypeScript, sınıflar, arayüzler gibi  &lt;strong&gt;Nesneye Dayalı Programlama&lt;/strong&gt; kavramlarını destekler.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3&gt;TypeScript Bileşenleri&lt;/h3&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
TypeScript üç bileşene sahiptir (Şekil 3):
&lt;br /&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;img src=&quot;/images/typescript_cycle.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
	Şekil 3. TypeScript&apos;i oluşturan bileşenler
&lt;/p&gt;
&lt;br /&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Dil:&lt;/strong&gt; Sözdizimi(syntax), anahtar sözcükler (keywords) ve ek açıklamalardan oluşur.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;TypeScript Derleyicisi:&lt;/strong&gt; TypeScript Derleyicisi (tsc), TypeScript’te yazılmış komutları JavaScript karşılığına çevirir.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;TypeScript Dil Servisi:&lt;/strong&gt; Dil servisi, ifade tamamlama, kod formatlama, özetleme, renklendirme gibi tipik editör işlemlerinin gerçekleşmesini sağlar.
&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;strong&gt;Kaynakça:&lt;/strong&gt;
&lt;ul&gt;
 	&lt;li&gt;[1] typescriptlang.org&lt;/li&gt;
 	&lt;li&gt;[2] en.wikipedia.org&lt;/li&gt; 	
	&lt;li&gt;[3] TypeScript Tutorial Book&lt;/li&gt; 
	&lt;li&gt;[4] Tony de Araujo - TypeScript in Plain Language Book&lt;/li&gt; 
&lt;/ul&gt;

&lt;/p&gt;
</description>
				<pubDate>Sat, 25 Feb 2017 16:21:00 +0300</pubDate>
				<link>http://omereryilmaz.com/typescript-nedir/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/typescript-nedir/</guid>
			</item>
		
			<item>
				<title>WordPress Zararlı Kod Tespiti</title>
				<description>&lt;p style=&quot;text-align:justify;&quot;&gt;
Resmi WordPress temaları ve eklentilerinin yanısıra bu tarz eklenti ve temaları ücretsiz sağlayan bir çok site bulunmaktadır. Çoğu kişi de bilinçsiz bir şekilde ihtiyaçları doğrultusunda harici sitelerden bu tip temaları veya eklentileri kullanabilmektedirler. Peki onlara ne kadar güvenebiliriz? Bu çok büyük bir soru işaretidir. Çoğu tema ve eklentiler kötü niyetli kodlar eklenerek servis edilmektedirler. Bu zararlı kodların tespiti aşamasına geçmeden birkaç terimin üzerinden geçmekte fayda olacağı kanısındayım.
&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Çoğu hacker’ın veya kötü niyetli kişilerin amacı websitenize malware (kötü amaçlı yazılım veya kod) bulaştırmaktır. Bu kötü amaçlı kodlar şunları içerebilir :
&lt;/p&gt;
&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;&lt;strong&gt;Pharma hack :&lt;/strong&gt; Bir SEO saldırısı türüdür. Bazı sitelerin sizin siteniz üzerinden trafik kazanmaya çalışmasıdır. Bu sitenizin sansürlenmesine bile neden olabilir.&lt;/li&gt;
 	&lt;li&gt;&lt;strong&gt;Backdoor :&lt;/strong&gt; FTP veya WordPress yönetici panelinizi istedikleri zaman erişmelerini sağlayan bir çeşit açık bir arka kapı bırakır.&lt;/li&gt;
 	&lt;li&gt;&lt;strong&gt;Kullanıcının zararlı dosya indirmesini sağlamak :&lt;/strong&gt; Bu hackleme yönteminde websitenizi ziyaret eden kullanıcıları yanıltarak  zararlı kodlar içeren dosyaları bilgisayarlarına indirmelerini sağlar.&lt;/li&gt;
 	&lt;li&gt;&lt;strong&gt;Dosya ve veritabanı enjeksiyonları :&lt;/strong&gt; Dosyalarınıza veya veritabanınıza, bilgisayar korsanlarının bir takım farklı şeyler yapmasını sağlayan kodu ekler.&lt;/li&gt;
 	&lt;li&gt;&lt;strong&gt;Kötü amaçlı yönlendirmeler :&lt;/strong&gt; Ziyaretçileri veya kullanıcıları zararlı bir sayfaya yönlendirir.&lt;/li&gt;
 	&lt;li&gt;&lt;strong&gt;Kimlik avı :&lt;/strong&gt; Kullanıcı adlarını, şifreleri, e-posta adreslerini ve diğer hassas bilgileri elde etmek için kullanılır [1].&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Nulled Tema veya Eklenti Nedir?&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Basitçe kırılmış veya hacklenmiş temalara verilen genel bir addır. Bu tür temaları servis edenler çoğunlukla gelir sağlamak için reklamlar veya backlinkler ekleyebilmektedir. Bunlar da çoğu zaman site sahibi böyle bir şeyin farkında olmadığından elde ettiği ücretsiz ürünün kendisi için bir nimet olarak düşünür. Buradan da anlaşılacağı üzere nulled tema ve eklentilerde çoğu zaman beklenenin dışında reklamlar, backlinkler ve sitenizin performansını kötü etkileyecek kodlar bulunmaktadır [2].
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;Bu uyarıyı yapmakta fayda görüyorum:

&lt;strong&gt;Asla nulled WordPress tema ve eklentilerine güvenmeyin!&lt;/strong&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Kötü Amaçlı Kodların Tespiti&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Bir şekilde tema veya eklentiyi bilgisayarınıza indirmişseniz olası trojan veya solucan tespiti için mutlaka öncesinde antivirüs programınızla taratınız. Eğer bir virüs programı kullanmıyorsanız aşağıdaki alternatif çözümleri de deneyebilirsiniz. Çünkü çoğu zaman bazı uygulamaların göremediği zararlı kodları bazıları tespit edebiliyor, bunun için alternatifleri de denemekte fayda var.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;VirusTotal&lt;/strong&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/virustotal1.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 1. Virustotal.com
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Virustotal.com adresi bu iş için pratik bir yöntemdir. Online olarak sitenizde yüklü olan tema ve eklentilerdeki zararlı kodların tespitinin yanı sıra sitenize henüz yüklememiş olduğunuz .zip uzantılı tema veya eklentinizde de zararlı kod tespitine yardımcı olur. Bilgisayarınıza indirdiğiniz dosyaları taratmak istiyorsanız “File” bölümünden, sitenizi taratmak istiyorsanız da “URL” bölümünden bu işleminizi kolayca gerçekleştirebilirsiniz. Şekil 2’de herhangi bir zararlı yazılımın tespit edilmediği sonuç görülmektedir.
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/virustotal2.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 2. Virustotal tarama 
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Şekil 3’de ise zararlı temayla gelen eklentide zararlı bir kod tespit edilmiş.
&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/virustotal3.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 3. Virustotal tarama sonucu
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;Eklentilerle de zararlı kod tespiti yapılabilmektedir.&lt;/strong&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
&lt;strong&gt;1.Sucuri Security&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/sucurisecu.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 4. Sucuri Security yönetim paneli
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Sucuri en bilindik güvenlik ve zararlı kod tespiti yapabilen WordPress eklentilerinden bir tanesidir. Websitenize yüklenen dosyalarınızı oluşruturulan karaliste doğrultusunda izlemenizi, güvenlikle ilgili bildirimler almanızı sağlayan çeşitli özellikleri bulunmaktadır.  Ücretsiz olarak &lt;a href=&quot;https://sitecheck.sucuri.net&quot;&gt;https://sitecheck.sucuri.net&lt;/a&gt; adresinden de web sitenizi taratabilirsiniz. Ayrıca eklentide belirli bir ücret karşılığında websitenizi daha güvenli hale getirmek için güvenlik duvarı seçeneği de sunmaktadır.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklentiyi bu adresten temin edebilirsiniz [&lt;strong&gt;&lt;a href=&quot;https://wordpress.org/plugins/sucuri-scanner/&quot;&gt;Sucuri Security Eklentisi&lt;/a&gt;&lt;/strong&gt;].
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;2.Exploit Scanner&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Exploit Scanner web sitenizin dosyalarını ve veritabanı tarayabilir, zararlı kod tespiti yapabilir. Websitenizi hacker saldırılarına karşı koruyamaz veya süpheli dosyaları silemez. Zararlı kod varlığından şüpheli bir dosya tespit edildiğinde bunun onarımını veya imhasını elle yapmalısınız.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklentiyi bu adresten temin edebilirsiniz [&lt;strong&gt;&lt;a href=&quot;https://wordpress.org/plugins/exploit-scanner/&quot;&gt;Exploit Scanner Eklentisi&lt;/a&gt;&lt;/strong&gt;].
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/exploitscanner.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 5. Exploit Scanner yönetim paneli
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklentinizi kurup, etkinleştirdikten sonra “Run the Scan” butonuna basıp tarama işlemini başlatabilirsiniz.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;3.AntiVirus&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
AntiVirus websitenizin tema dosyalarında tarama yaparak kötü amaçlı kodları tespit edebilen ücretsiz bir WordPress eklentisidir. Ayrıca herhangi bir kötü amaçlı kodun tespitinde e-posta yoluyla bilgilendirilme yoluna da gidebilme seçeneği sunmaktadır.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklenti yalnızca geçerli temayı taramaktadır. Yüklü diğer temalarda tarama işlemi gerçekleştirmez. Zaten güncellenmemiş eski temaları barındırmanız güvenlik açıklarına sebep olabileceğinden kaldırmanız önerilmektedir.
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklentiyi bu adresten temin edebilirsiniz [&lt;a href=&quot;https://wordpress.org/plugins/antivirus/&quot;&gt;&lt;strong&gt;AntiVirus Eklentisi&lt;/strong&gt;&lt;/a&gt;].
&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/antivirus.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 6. AntiVirus yönetim paneli
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Şekil 6’da görüldüğü üzere temamızı manuel olarak da otomatik olarak da taramamıza imkan sağlamaktadır. Temamızın günlük olarak taranmasını istiyorsak ilgili kutucuğu işaretleyip mail adresimizi yazdıktan sonra “Değişiklikleri Kaydet” butonuna tıklamalıyız.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;4.TAC (Theme Authenticity Checker)&lt;/strong&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Ücretsiz temalarda backlink ekleme çok yaygın bir tekniktir. Theme Authenticity Checker (Tema Özgünlük Denetleyicisi) eklentisi sayesinde bu kodları kolaylıkla bulabilirsiniz.
&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Eklentiyi bu adresten temin edebilirsiniz [&lt;strong&gt;&lt;a href=&quot;https://wordpress.org/plugins-wp/tac/&quot;&gt;TAC Eklentisi&lt;/a&gt;&lt;/strong&gt;].
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/tac1.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 7. TAC yönetim paneli
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Şekil 7’de görüldüğü üzere yüklü TAC eklentimiz “Görünüm” menüsü altına gelmektedir. Buradan eklentimize tıklayarak mevcut temalarınızda özgünlük taraması işlemini gerçekleştirebilirsiniz.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/tac2.png&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    Şekil 8. TAC tarama sonuçları
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Şekil 8’de görüldüğü üzere tarama işlemi tamamlanmış ve temaların bir tanesinde link tespit edilmiş.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
&lt;strong&gt;4.Kendiniz&lt;/strong&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Aslında antimalware ve benzeri eklentilerin sayısı oldukça fazladır. Ama asıl önemli olan kriter güvenliğin kendi elinizde olmasıdır. Siz hata yapmadığınız müddetçe saldırıya maruz kalmanız çok nadirdir. Güvenmediğiniz kaynaklardan tema ve eklentileri yüklemeyerek, WordPress sürümünüzü güncel tutarak websitenizin güvenliğini bir nebzede olsa sağlamış olursunuz.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;strong&gt;Kaynakça :&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[1] https://www.elegantthemes.com/blog/tips-tricks/how-to-scan-your-wordpress-website-for-hidden-malware&lt;/p&gt;

&lt;p&gt;[2] http://wordpress.stackexchange.com/questions/232041/what-are-nulled-themes&lt;/p&gt;
</description>
				<pubDate>Tue, 14 Feb 2017 01:05:00 +0300</pubDate>
				<link>http://omereryilmaz.com/wordpress-zararli-kod-tespiti/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/wordpress-zararli-kod-tespiti/</guid>
			</item>
		
			<item>
				<title>Java Lambda Nedir?</title>
				<description>&lt;p style=&quot;text-align:justify;&quot;&gt;
Java, nesne-yönelimli programlamanın (object-oriented programming)  yazılım geliştirme için temel paradigma olduğu 1990’lı yıllarda nesne-yönelimli  bir programlama dili olarak tasarlanmıştır. Nesne-yönelimli programlamadan çok önce Lisp ve Scheme gibi fonksiyonel programlama dilleri olmasına rağmen akademik çevreler dışında pek rağbet görmemiştir. Son zamanlarda da fonksiyonel programlama önem kazanmıştır çünkü eşzamanlı ve olay güdümlü programlama için bu yöntem çok uygundur. Ama bu, nesne-yönelimli programlamanın kötü olduğu anlamına gelmemektedir. Aksine nesne-yönelimli programlamayla fonksiyonel programlamanın harmanlanması bu konuya daha da işlevsellik kazandırmaktadır. Örneğin programlama dilinin işlevsel ifadeler için uygun bir söz dizimi (syntax) varsa koleksiyon kütüphaneleri güçlü API’ler sunabilir. Java 8 ile gelen temel değişiklik fonksiyonel programlama yapılarının nesne-yönelimli yapının köklerine eklenmesidir [1].&lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Lambda ifadeleri de Java 8 ile birlikte gelen en büyük yenilik olarak görülmüştür. Ana amacı fonksiyonel programlamayı kolaylaştırarak kod geliştirmeyi veya yazmayı daha sade ve basit hale getirmeyi sağlamaktır [2]. Bir lambda ifadesi anonim bir fonksiyonun kısa bir şekilde gösterimi de diyebiliriz. Bir isme sahip değildir ancak parametre listesine, bir gövdeye ve bir dönüş tipine ayrıca da fırlatılabilecek istisnaların (exceptions) bir listesine sahiptir. Bu tanımı biraz daha anlaşılabilir olması adına açacak olursak;
&lt;/p&gt;
&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;Anonimdir dedik çünkü bir metodun normalde sahip olacağı gibi belirgin bir isme sahip değildir.&lt;/li&gt;
 	&lt;li&gt;Fonksiyondur dedik çünkü bir lambda belirli bir sınıfla bir metod gibi ilişkili değildir. Ancak bir metod gibi parametre listesi, bir gövdesi, bir dönüş tipi ve muhtemel fırlatılabilecek istisna listesine sahiptir.&lt;/li&gt;
 	&lt;li&gt;Bir lambda ifadesi bir metodda argüman olarak geçirilebilir veya bir değişkende depolanabilir.&lt;/li&gt;
 	&lt;li&gt;Yazımı kısadır, anonim sınıflar gibi basmakalıp uzun bir yazımı yoktur.&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Sonuç olarak kodumuzun daha net ve esnek olmasını sağlar. Örneğin lambda ifadesi kullanarak daha kısa bir şekilde özel bir Comparator nesnesi oluşturabilirsiniz [3].
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Önce :&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;Comparator&amp;lt;Elma&amp;gt; agirlikOlarak = new Comparator&amp;lt;Elma&amp;gt;() {
public int compare(Elma e1, Elma e2){
return e1.getAgirlik().compareTo(e2.getAgirlik());
}
};&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sonra (lambda ifadesiyle):&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;Comparator&amp;lt;Elma&amp;gt; agirlikOlarak =
(Elma e1, Elma a2) -&amp;gt; e1.getAgirlik().compareTo(e2.getAgirlik());&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p style=&quot;text-align:justify;&quot;&gt;
Yukarıdaki kodların her ikisinde de Elma sınıfından üretilen nesnenin ağırlıkları karşılaştırılmaktadır. Görüldüğü üzere lambda ifadesi kullanılarak kod daha anlaşılır ve kısa hale getirilmiştir.
&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/Lambda_ifadesi.jpg&quot; /&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;strong&gt;Şekil 1.&lt;/strong&gt; Bir lambda ifadesi parametrelereden, bir ok şeklinden ve bir gövdeden oluşmaktadır.
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul style=&quot;text-align:justify;&quot;&gt;
 	&lt;li&gt;Parametre listeleri : Buradaki iki “Elma”nın parametreleri, bir Comporator karşılaştırma metodu ile karşılaştırılır.&lt;/li&gt;
 	&lt;li&gt;Lambda operatörü : Parametre listesini lambda’nın gövdesinden ayırır.&lt;/li&gt;
 	&lt;li&gt;Lambda gövdesi : İki “Elma”nın ağırlıkları burada karşılaştırılır. Karşılaştırma sonucu da lambda’nın dönüş değeri olarak düşünülür.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:justify;&quot;&gt;
Bu şekildeki lambda syntax’ı Java tasarımcıları tarafından, C# ve Scala gibi benzer özellikleri taşıyan dillerde başarılı olduğu için seçilmiştir. Yukarıda da anlatıldığı üzere temel syntax;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Parametreler) -&amp;gt; ifade&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Veya&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Parametreler) -&amp;gt; { ifadeler; }&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lambda örnekleri :&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;
    &lt;img src=&quot;/images/java_lamdha_ornek.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kaynakça:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 	&lt;li&gt;[1] http://www.drdobbs.com/jvm/lambda-expressions-in-java-8/240166764&lt;/li&gt;
 	&lt;li&gt;[2] https://www.tutorialspoint.com/java8/java8_lambda_expressions.htm&lt;/li&gt;
 	&lt;li&gt;[3] Java 8 in Action&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 08 Feb 2017 19:36:00 +0300</pubDate>
				<link>http://omereryilmaz.com/java-lambda-nedir/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/java-lambda-nedir/</guid>
			</item>
		
			<item>
				<title>Üniversiteliler İçin indir.com Mobil Uygulama Yarışması Başladı!</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.indir.com/&quot;&gt;indir.com&lt;/a&gt;&lt;span style=&quot;color:#000000;&quot;&gt;, geçtiğimiz yıllarda düzenlediği büyük ilgi gören “indir.com Mobil Uygulama Yarışması”na ek olarak bu yıl sadece Üniversitelilerin katılabileceği “Üniversiteliler İçin indir.com Mobil Uygulama yarışması” düzenliyor.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;1 Ocak 2016 tarihi itibariyle katılım süreci başlayan yarışmaya, bireysel veya en fazla 3 kişilik ekipten oluşan tüm öğrenciler, özgün ve 2016 yılı içerisinde uygulama marketlerde yayınlanmış olan uygulamaları ile katılabiliyorlar.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Katılımcıların kendi geliştirdikleri özgün uygulamaları daha geniş kitlelere tanıtma ve hayata geçirme imkanı&lt;/span&gt; &lt;span style=&quot;color:#000000;&quot;&gt;bulacağı yarışmada finale kalarak ilk 3’e giren yarışmacılar birbirinden değerli ödüllerin sahibi olacaklar.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;&lt;em&gt;İşte Kesinleşen O Ödüller!&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Kesinleşen ödüller aşağıdaki gibidir. Diğer ödüllerin neler olacağı ise ilerleyen günlerde indir.com tarafından duyurulacaktır.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Birinci;&lt;/strong&gt; 1 hafta Silikon Vadisi tatili (San Francisco), bukalemun.com’dan 5000 TL değerinde ASO hizmeti, indir.com’dan 5.000TL değerinde reklam.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;İkinci;&lt;/strong&gt; Antalya’da 1 hafta tatil, indir.com’dan 2.500TL değerinde uygulamanın tanıtımı…&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Üçüncü;&lt;/strong&gt; Antalya’da 3 gün tatil, indir.com’dan 1.000TL değerinde uygulamanın tanıtımı…&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Üniversiteliler için özel ödül;&lt;/strong&gt; yarışmanın birincisine verilecek olan değerli ödüllere ek olarak sadece “Üniversiteliler İçin indir.com Mobil Uygulama Yarışması” kazananına Silikon Vadisi tatilindeki ihtiyaçlarını karşılamak amacıyla &lt;strong&gt;5000 TL nakit para ödülü&lt;/strong&gt; verilecek.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Katılım Süreci!&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Sadece Üniversitelilerin katılabileceği yarışma, 1 Ocak 2016 tarihi itibariyle başladı. Son başvuru tarihi ise; 30 Ağustos 2016. Bu tarihe kadar bireysel veya en fazla 3 kişilik ekiplerden oluşan tüm öğrenciler başvurabilirler.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Başvuru süreci tamamlandıktan sonra yarışmaya katılmaya hak kazanan uygulamalar, indir.com tarafından tanıtılacak ve 5 Eylül 2016 tarihinde “Halk Oylaması”na sunulacak. Halk oylaması sonucunda en çok oyu alarak ilk 10’a giren uygulamalar, 10 Eylül 2016 tarihinde kendi alanlarında uzman, birbirinden değerli jüri üyelerinin değerlendirilmesine sunulacak. Jüri değerlendirmesi sonucunda ilk 3’e girerek kazanan uygulamalar belli olacak. Kazanan uygulamalar, “Mobil Etkinlik” kapsamında düzenlenecek olan “Ödül Töreni”nde açıklanacak.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Ödül Töreni!&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Sadece Üniversitelilerin katılımına açık olan “Üniversiteliler İçin indir.com Mobil Uygulama Yarışması” ödül töreni; yarışmayı kazanan öğrencinin öğrenim gördüğü Üniversitede düzenlenecek olan “Mobil Etkinlik” kapsamında yapılacak. Üstelik bu etkinliğe tüm öğrenciler davetli olacak.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Yani; kazanan öğrenci Pamukkale Üniversitesinde eğitim görüyorsa ödül töreni, Denizli’de Pamukkale Üniversitesinde, indir.com tarafından gerçekleştirilecek olan “Mobil Etkinlik” kapsamında yapılacaktır.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;&lt;em&gt;Üniversiteliler için indir.com Mobil Uygulama Yarışması 2016 Takvimi&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Yarışma Başlangıcı:&lt;/strong&gt; 1 Ocak 2016&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Son Başvuru: &lt;/strong&gt;30 Ağustos 2016&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Halk Oylaması: &lt;/strong&gt;5 Eylül 2016&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Jüri Değerlendirmesi: &lt;/strong&gt;10 Eylül 2016&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;&lt;strong&gt;Mobil Etkinlik:&lt;/strong&gt; Ekim Ayında&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:#000000;&quot;&gt;Detaylı bilgi için;&lt;/span&gt; &lt;a href=&quot;http://www.indir.com/yarismauni/&quot;&gt;Üniversiteliler için indir.com Mobil Uygulama Yarışması şartları ve katılım formu&lt;/a&gt;&lt;span style=&quot;color:#000000;&quot;&gt;’na tıklatınız.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
				<pubDate>Tue, 16 Feb 2016 20:17:00 +0300</pubDate>
				<link>http://omereryilmaz.com/universiteliler-icin-indir-com-mobil-uygulama-yarismasi-basladi/</link>
				<guid isPermaLink="true">http://omereryilmaz.com/universiteliler-icin-indir-com-mobil-uygulama-yarismasi-basladi/</guid>
			</item>
		
	</channel>
</rss>
